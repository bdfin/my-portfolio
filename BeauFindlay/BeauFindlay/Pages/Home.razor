@page "/"

@implements IDisposable

<PageTitle>Home - Beau Findlay</PageTitle>

@if (isFirstRender)
{
    <h1 class="text-4xl">
        <Typewriter Text="Hi, I'm Beau."/>
    </h1>

    <p class="text-xl mt-4">
        <Typewriter Name="@TypewriterConstants.Name.IntroComplete" Text="I'm a UK-based software engineer and I love building cool stuff."/>
    </p>

    <h2 class="text-2xl mt-16 underline underline-offset-4">
        <Typewriter Text="A bit about me"/>
    </h2>

    <p class="text-xl mt-4">
        <Typewriter Text="I mostly specialise in back-end C#/.NET development and I build systems that scale for hundreds-of-thousands of global users."/>
    </p>

    <p class="text-xl mt-4">
        <Typewriter Text="I'm currently heading up the tech as CTO at a cool startup called un:hurd."/>
    </p>
}
else
{
    <h1 class="text-4xl">
        Hi, I'm Beau.
    </h1>

    <p class="text-xl mt-4">
        I'm a UK-based software engineer and I love building cool stuff.
    </p>

    <h2 class="text-2xl mt-16 underline underline-offset-4">
        A bit about me
    </h2>

    <p class="text-xl mt-4">
        I mostly specialise in back-end C#/.NET development and I build systems that scale for hundreds-of-thousands of global users.
    </p>

    <p class="text-xl mt-4">
        I'm currently heading up the tech as CTO at a cool startup called un:hurd.
    </p>
}


@code {
    private bool isFirstRender = true;
    
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            isFirstRender = false;
            
            Typewriter.OnAllTypingCompleted += HandleTypingCompleted;
        }
    }

    private static void HandleTypingCompleted()
    {
        Console.WriteLine("Typewriter finished typing.");
    }

    public void Dispose()
    {
        Typewriter.OnAllTypingCompleted -= HandleTypingCompleted;
    }

}